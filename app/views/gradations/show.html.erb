<% content_for :left do %>
	<%= show_course_list %>
<% end %>

<%# Loop through the gradations and build a table with students as the ROW
  # and assignments in the COLUMN.  Along the way we'll also alert the user 
  # when there are missing students or assignments. %>
<form id='grade_grid'>
<table class='grade_grid sortable'>
	<thead>
		<tr>
			<th>Student Name</th>
			<th width='60'>%</th>
			<% if @gradations.assignments.count == 0 then %>
				<th>No Assignments Found</th>			
			<% else %>
				<% for assignment in @gradations.assignments %>
					<th width='50' class='grade' id='<%= assignment.id %>'>
						<span class='assign-name'><%= h assignment.name %></span><br />
						<span class='assign-points'><%= h assignment.possible_points %></span><br />
						<span class='assign-date'><%= h assignment.due_date.to_s(:due_date) if assignment.due_date %></span><br />
					</th>
				<% end %>
			<% end %>
			<th width='auto'></th>
		</tr>
	</thead>
	<tbody>
	  <%# Show a default message if there are no students in this course %>
		<% if @gradations.students.count == 0 then %>
			<tr><td>No Students Found</td></tr>
		<% end %>
		
		  <% counter = 0 %>
		  <% number_of_students = @gradations.students.count %>
		
		  <%# Loop through all the students to build the TR data %>
		  <% for student in @gradations.students %>
			  <tr class="calc <%= cycle('odd', 'even') %>"  id='<%= student.id %>' />
				  <%= content_tag :td, student.full_name, :id => student.id %>
				  <td class='score'>0.0</td>
				  <% a_counter = counter + 1 %>
				
				  <%# Now, loop through each assignment for the current student %>
				  <% for assignment in @gradations.assignments %>
					  <td class='grades'>
						  <%# Does this student already have a grade for this assignment? %>
						  <% if assignment.gradations[counter] %>
							  <%= text_field_tag 'score', assignment.gradations[counter].points_earned, 
									  :points	=> assignment.possible_points,
									  :name		=> 'grade',
									  :id			=> [:s => student.id, :a => assignment.id],
									  :tabindex	=> a_counter,
									  :onchange => remote_function( :url => {:action => :update_grade}, 
									     :with => "'student=#{student.id}&assignment=#{assignment.id}&score=' + value"),
									  :size		=> '5' %>
						  <% else %>
							  <%= text_field_tag 'score', '', 
									  :points	=> assignment.possible_points,
									  :name		=> 'grade', 
									  :id			=> [:s => student.id, :a => assignment.id],
									  :tabindex	=> a_counter,
									  :onchange => remote_function( :url => {:action => :update_grade}, 
									     :with => "'student=#{student.id}&assignment=#{assignment.id}&score=' + value"),
									  :size		=> '5' %>
						  <% end %>
					  </td>
					  <% a_counter += number_of_students %>
				  <% end %>
				  <td></td>
			  </tr>
			  <% counter += 1 %>
		  <% end %>
  </tbody>
</table>
</form>

<%# Load up the JavaScript that will compute the grades for this course %>
<%= javascript_tag render( :partial => 'compute_grades.js') %>

<script type="text/javascript">
  // Force a recalculation as soon as the HTML is loaded
  document.observe('dom:loaded', calculate);

  // Watch for changes in the form
  new Form.Observer('grade_grid', 1, calculate);
</script>
